// Define the function signature

int ft_printf(const char* format, ...)
{
	
  
  
// iterating throught characters to find %
	
	int	i;
	int	n_arg;
	void	type;
	
	
	i = 0;
	n_arg = !;
	while (str[i] != '\0')
	{
		while (str[i] != '%')
		{
			purchar(str[i]);
			i++;
		}
		if (str[i] == '%')
		{
			i++;
			n_arg += 1;
			type = ft_checktype(str[i]) // check the type of argument provided (d, i, f, c, s, x, X, o)
			// what should the function ft_checktype return?
			
// once I know the type I need to print I need to convert the argument into character
ft_findconvert(argv[n_arg], type)
{
	char	*return;
	
	if (type == 'c') // single character
		return = function_1;
	else if (type == 's') // string
		return = function_2;
	else if (type == 'p') // void * pointer in hexadecimal format
		return = function_3;
	else if (type == 'd') // decimal number
		return = function_4;
	else if (type == 'i') // integer in base 10
		return = function_5;
	else if (type == 'u') // unsigned decimal number
		return = function_6;
	else if (type == 'x') // hexadecimal lowercase format
		return = function_7;
	else if (type == 'X') // hexadecimal uppercase format
		return = function_8;
	else if (type == '%%') // percent sign
		return = function_9;
		
		
	function_1 = putchar
	function_2 = iterate through string and putchar
	function_3 = hexadecimal string to convert to char, putchar + putnbr
	function_4 = putnbr
	function_5 = putnbr
	function_6 = putnbr 
	function_7 = hexa_low_putnbr
	function_8 = hexa_up_putnbr
	function_9 = putchar
	
	
int	ft_findtype(char *str, int i)
{
	while (str[i] != '%' && str[i] != '\0')
	{
		ft_putchar(str[i]);
		i++;
	}
	if (str[i] == '\0' || (str[i] == '%' && str[++i] == '\0'))
		return (-1);
	else
		return (i);
}

ft_check_valid_type(str[i]);
void	ft_check_valid_type(char c)
{
	if (c == 'c' || c == 's' || c == 'p' || c == 'd' || c == 'i' || c == 'u' || c == 'x' || c == 'X' || c == '%'

	
